# Main SConstruct file

import os, sys
import commands, subprocess

Import('env', 'conf', 'algorithms')

# add libpath to LD_LIBRARY_PATH to be able to correctly run the tests
ldpath = os.environ.get('LD_LIBRARY_PATH', '')
os.environ['LD_LIBRARY_PATH'] = ':'.join(conf.LIBPATH + [ ldpath ])


def check_filenames(target,source, env):
    for algoname, algorithm in algorithms.items():
        expected_header_filename = os.path.dirname(algorithm['header']) + os.sep + algoname.lower() + '.h'
        expected_source_filename = expected_header_filename.replace('.h','.cpp')
        if expected_header_filename != algorithm['header']:
            print algoname, "header is not in file", expected_header_filename, \
                  "but in", algorithm['header']
        if not os.path.isfile(expected_source_filename):
            print algoname, "source is not in file", expected_source_filename, \
                  "but probably in", algorithm['header'].replace('.h','.cpp')


def check_test_filenames(target,source,env):
    for algoname, algorithm in algorithms.items():
        expected_test_header_filename = os.path.join('test','src','descriptortests') + os.sep + algoname.lower() + '_test.h'
        expected_test_source_filename = os.path.join('test','src','descriptortests') + os.sep + algoname.lower() + '_test.cpp'
        if not os.path.isfile(expected_test_header_filename):
            print algoname, "test is not in file", expected_test_header_filename
        if not os.path.isfile(expected_test_source_filename):
            print algoname, "test is not in file", expected_test_source_filename


if 'check_filenames' in COMMAND_LINE_TARGETS:
    bld = Builder(action = check_filenames, suffix = '.check', src_suffix = '')
    env['BUILDERS']['check_filenames'] = bld
    env.check_filenames('filenames.check', '../src/base/essentiamath.h')
    env.Alias('check_filenames','filenames.check')


if 'check_test_filenames' in COMMAND_LINE_TARGETS:
    bld = Builder(action = check_test_filenames, suffix = '.check', src_suffix = '')
    env['BUILDERS']['check_test_filenames'] = bld
    env.check_test_filenames('test_filenames.check', '../src/base/essentiamath.h')
    env.Alias('check_test_filenames','test_filenames.check')
